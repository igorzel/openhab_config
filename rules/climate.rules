import java.lang.Integer
import java.lang.Double

import org.openhab.core.persistence.*
import org.openhab.core.library.types.*
import org.openhab.core.library.items.*


//------------------------------------------------------------------------

rule "Gas heater settings change"
when
    Item Settings_EnableGasHeater changed
then
	BedroomTemperatureSetpoint.postUpdate(21)
	GasHeater.postUpdate(OFF)
end

//------------------------------------------------------------------------

rule "Initialize heating states"
when
	System started
then
	BedroomTemperatureSetpoint.postUpdate(21)
	GasHeater.postUpdate(OFF)
end

//------------------------------------------------------------------------

rule "Gas heater"
when
    Item BedroomTemperature changed or
    Item BedroomTemperatureSetpoint changed
then
	var Number setpoint = BedroomTemperatureSetpoint.state as DecimalType
	var Number currentTemp = BedroomTemperature.state as DecimalType
    val hysteresis = 0.5
    
    if (currentTemp <= (setpoint - hysteresis)) {
		GasHeater.postUpdate(ON)
	} else if (currentTemp >= (setpoint + hysteresis)) {
		GasHeater.postUpdate(OFF)
	}
end

//------------------------------------------------------------------------

rule
    "Temperature changed"
when
    Item BedroomTemperature changed
then
    var Number currentTemp = BedroomTemperature.state as DecimalType

    TemperatureWidget.postUpdate(String::format("maroon Температура %.01f°C", currentTemp.doubleValue))
end

//------------------------------------------------------------------------
